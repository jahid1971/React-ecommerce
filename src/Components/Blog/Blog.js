import React from 'react';

const Blog = () => {
    return (
        <div>
            <h3 className='text-center mt-10 mb-4' > Blog</h3>
             <hr className='border-3 border-cyan-400 ' />
              <div className='my-5'>
                     <div className='text-left '>
                        <h5>Q: How does react work?</h5>
                        <p><h5>Answer:</h5>
                              React creats Virtual dom before rendering . virtual dom is used dor modification.React goes through its virtual DOM ,creates a list of those changes that need to be made to the actual DOM and then does it all in one single process.React deliver the UI as JavaScript: The UI that the end users interacts with in the browser is the result of JavaScript code that has created/manipulated the DOM. In both cases the JavaScript code that is executed in the Browser is generated by a compilation step
                        </p>
                     </div>
              </div>
              <div className='my-5'>
                     <div className='text-left '>
                        <h5>Q: What is the differnce between Props and useState?</h5>
                        <p><h5>Answer:</h5>
                        UseState is used  to store the data of the current page needs in the controller-view.Props is used to pass data and event handlers down to the child child components.Props can be used with state and functional components.State can be used only with the state components/class componentProps are read-only.State State is both read and write.
                        </p>
                     </div>
              </div>
              <div className='my-5'>
                     <div className='text-left '>
                        <h5>Q: Why is useEffect is used?</h5>
                        <p><h5>Answer:</h5>
                        The useEffect hook allows components to react to lifecycle events such as mounting to the DOM, re-rendering, and unmounting.The motivation behind the introduction of useEffect Hook is to eliminate the side-effects of using class-based components. For example, tasks like updating the DOM, fetching data from API end-points, setting up subscriptions or timers, etc can be lead to unwarranted side-effects.
                        </p>
                     </div>
              </div>
        </div>
    );
};

export default Blog;